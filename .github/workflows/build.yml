name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.25.1'
  CACHE_VERSION: v1

jobs:
  # Stage 1: Setup and Dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Configure Git and Go for private repos
      env:
        ORG_CHECKOUT_TOKEN: ${{ secrets.ORG_CHECKOUT_TOKEN }}
      run: |
        # Configure Go to treat getsyntegrity repos as private
        go env -w GOPRIVATE=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        go env -w GONOPROXY=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        go env -w GONOSUMDB=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        # Create .netrc file for authentication
        echo "machine github.com" > ~/.netrc
        echo "login x-access-token" >> ~/.netrc
        echo "password ${{ secrets.ORG_CHECKOUT_TOKEN }}" >> ~/.netrc
        chmod 600 ~/.netrc
        # Configure Git authentication
        git config --global url."https://x-access-token:${{ secrets.ORG_CHECKOUT_TOKEN }}@github.com/".insteadOf "https://github.com/"
        git config --global url."https://x-access-token:${{ secrets.ORG_CHECKOUT_TOKEN }}@github.com/".insteadOf "git@github.com:"
        
    - name: Clean Go module cache
      run: |
        # Clean any existing module cache to avoid conflicts
        # First, make files writable to avoid permission errors
        chmod -R u+w ~/go/pkg/mod 2>/dev/null || true
        rm -rf ~/go/pkg/mod
        mkdir -p ~/go/pkg/mod
        
    - name: Cache Go modules                                                      
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-mod-${{ hashFiles('go.sum') }}-${{ env.CACHE_VERSION }}
        restore-keys: |
          go-mod-${{ hashFiles('go.sum') }}-
          go-mod-
          
    - name: Download dependencies
      env:
        ORG_CHECKOUT_TOKEN: ${{ secrets.ORG_CHECKOUT_TOKEN }}
      run: go mod download
      
    - name: Verify dependencies
      run: go mod verify

  # Stage 2: Build (runs in parallel with tests)
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Configure Git and Go for private repos
      env:
        ORG_CHECKOUT_TOKEN: ${{ secrets.ORG_CHECKOUT_TOKEN }}
      run: |
        # Configure Go to treat getsyntegrity repos as private
        go env -w GOPRIVATE=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        go env -w GONOPROXY=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        go env -w GONOSUMDB=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        # Create .netrc file for authentication
        echo "machine github.com" > ~/.netrc
        echo "login x-access-token" >> ~/.netrc
        echo "password ${{ secrets.ORG_CHECKOUT_TOKEN }}" >> ~/.netrc
        chmod 600 ~/.netrc
        # Configure Git authentication
        git config --global url."https://x-access-token:${{ secrets.ORG_CHECKOUT_TOKEN }}@github.com/".insteadOf "https://github.com/"
        git config --global url."https://x-access-token:${{ secrets.ORG_CHECKOUT_TOKEN }}@github.com/".insteadOf "git@github.com:"
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-mod-${{ hashFiles('go.sum') }}-${{ env.CACHE_VERSION }}
        restore-keys: |
          go-mod-${{ hashFiles('go.sum') }}-
          go-mod-
          
    - name: Build
      run: go build ./...

  # Stage 3: Tests (runs in parallel with build)
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Configure Git and Go for private repos
      env:
        ORG_CHECKOUT_TOKEN: ${{ secrets.ORG_CHECKOUT_TOKEN }}
      run: |
        # Configure Go to treat getsyntegrity repos as private
        go env -w GOPRIVATE=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        go env -w GONOPROXY=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        go env -w GONOSUMDB=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        # Create .netrc file for authentication
        echo "machine github.com" > ~/.netrc
        echo "login x-access-token" >> ~/.netrc
        echo "password ${{ secrets.ORG_CHECKOUT_TOKEN }}" >> ~/.netrc
        chmod 600 ~/.netrc
        # Configure Git authentication
        git config --global url."https://x-access-token:${{ secrets.ORG_CHECKOUT_TOKEN }}@github.com/".insteadOf "https://github.com/"
        git config --global url."https://x-access-token:${{ secrets.ORG_CHECKOUT_TOKEN }}@github.com/".insteadOf "git@github.com:"
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-mod-${{ hashFiles('go.sum') }}-${{ env.CACHE_VERSION }}
        restore-keys: |
          go-mod-${{ hashFiles('go.sum') }}-
          go-mod-
          
    - name: Run tests
      run: go test -race -coverprofile=coverage.out ./...
      
    - name: Upload coverage
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out
        fail_ci_if_error: false

  # Stage 4: Security (runs after build and test)
  security:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Configure Git and Go for private repos
      env:
        ORG_CHECKOUT_TOKEN: ${{ secrets.ORG_CHECKOUT_TOKEN }}
      run: |
        # Configure Go to treat getsyntegrity repos as private
        go env -w GOPRIVATE=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        go env -w GONOPROXY=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        go env -w GONOSUMDB=github.com/getsyntegrity/*,gitlab.com/syntegrity/*
        # Create .netrc file for authentication
        echo "machine github.com" > ~/.netrc
        echo "login x-access-token" >> ~/.netrc
        echo "password ${{ secrets.ORG_CHECKOUT_TOKEN }}" >> ~/.netrc
        chmod 600 ~/.netrc
        # Configure Git authentication
        git config --global url."https://x-access-token:${{ secrets.ORG_CHECKOUT_TOKEN }}@github.com/".insteadOf "https://github.com/"
        git config --global url."https://x-access-token:${{ secrets.ORG_CHECKOUT_TOKEN }}@github.com/".insteadOf "git@github.com:"
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: go-mod-${{ hashFiles('go.sum') }}-${{ env.CACHE_VERSION }}
        restore-keys: |
          go-mod-${{ hashFiles('go.sum') }}-
          go-mod-
          
    - name: Check for vulnerabilities
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./... | tee vuln_report.txt
        if grep -q "Vulnerabilities found" vuln_report.txt; then
          echo "❌ Security vulnerabilities detected! Please update dependencies."
          cat vuln_report.txt
          exit 1
        else
          echo "✅ No security vulnerabilities found."
        fi
