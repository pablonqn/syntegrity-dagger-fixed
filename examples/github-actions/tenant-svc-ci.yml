name: CI/CD with Syntegrity Dagger

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  SYNTEGRITY_DAGGER_VERSION: "latest"  # or pin to specific version like "v1.0.0"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25.1'
        
    # Cache Syntegrity Dagger binary for performance
    - name: Cache Syntegrity Dagger
      id: cache-dagger
      uses: actions/cache@v3
      with:
        path: syntegrity-dagger
        key: syntegrity-dagger-${{ env.SYNTEGRITY_DAGGER_VERSION }}-linux-amd64
        
    # Download Syntegrity Dagger if not cached
    - name: Download Syntegrity Dagger
      if: steps.cache-dagger.outputs.cache-hit != 'true'
      run: |
        if [ "${{ env.SYNTEGRITY_DAGGER_VERSION }}" = "latest" ]; then
          URL="https://github.com/syntegrity/syntegrity-dagger/releases/latest/download/syntegrity-dagger-linux-amd64"
        else
          URL="https://github.com/syntegrity/syntegrity-dagger/releases/download/${{ env.SYNTEGRITY_DAGGER_VERSION }}/syntegrity-dagger-linux-amd64"
        fi
        
        echo "ðŸ“¥ Downloading Syntegrity Dagger from: $URL"
        curl -L "$URL" -o syntegrity-dagger
        chmod +x syntegrity-dagger
        
        # Verify download
        ./syntegrity-dagger --version
        
    # Run Syntegrity Dagger Pipeline for tenant-svc
    - name: Run Syntegrity Dagger Pipeline
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REF_NAME: ${{ github.ref_name }}
      run: |
        ./syntegrity-dagger \
          -config=.syntegrity-dagger.yml \
          -env=production
